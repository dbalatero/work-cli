#!/usr/bin/env bash

set -e

function dotsay() {
  local result
  result=$(_colorized "$@")
  echo "$result"
}

function _colorized() {
  echo "$@" | sed -E \
    -e 's/((@(red|green|yellow|blue|magenta|cyan|white|reset|b|u))+)[[]{2}([^]]*)[]]{2}/\1\4@reset/g' \
    -e "s/@red/$(tput setaf 1)/g" \
    -e "s/@green/$(tput setaf 2)/g" \
    -e "s/@yellow/$(tput setaf 3)/g" \
    -e "s/@blue/$(tput setaf 4)/g" \
    -e "s/@magenta/$(tput setaf 5)/g" \
    -e "s/@cyan/$(tput setaf 6)/g" \
    -e "s/@white/$(tput setaf 7)/g" \
    -e "s/@reset/$(tput sgr0)/g" \
    -e "s/@b/$(tput bold)/g" \
    -e "s/@u/$(tput sgr 0 1)/g"
}

function command_exists() {
  local name=$1

  command -v "$name" >/dev/null 2>&1
}

function install_git() {
  if ! command_exists "git" ; then
    echo "+ Installing git..."
    brew install git
  fi
}

function get_shell_type() {
  case $SHELL in
  */zsh)
    echo "zsh"
    ;;
  */bash)
    echo "bash"
    ;;
  *)
    echo "unsupported"
  esac
}

# Clone the repo to ~/.work-cli
if [[ ! -d $HOME/.work-cli ]]; then
  dotsay "+ Installing work-cli to @yellow[[$HOME/.work-cli]]"
  git clone https://github.com/dbalatero/work-cli "$HOME/.work-cli"
else
  dotsay "+ work-cli is already installed at @yellow[[$HOME/.work-cli]], skipping @yellow[[git clone]]"
fi

shell_type=$(get_shell_type)

# Add to shell files
if ! command_exists "work" ; then
  dotsay "+ Adding work-cli to your path..."
  echo

  shell_file="$HOME/.${shell_type}rc"
  path_export="export PATH=\$HOME/.work-cli/bin:\$PATH"

  if [ "$shell_type" = "unsupported" ]; then
    add_to_shell="no"
  else
    dotsay "It looks like you use @yellow[[$shell_type]] for your shell."
    echo
    dotsay "Do you want me to add @yellow[[$path_export]] to your @yellow[[$shell_file]] file?"
    echo
    read -r -p "(Y/n) > " add_to_shell
    echo
  fi

  if [[ "$add_to_shell" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    dotsay "+ Adding PATH update to @yellow[[$shell_file]]"
    echo "$path_export" >> "$shell_file"
    echo
  else
    echo "No problem! You just need to add this line yourself to your shell init:"
    echo
    dotsay "@yellow[[$path_export]]"
    echo
  fi
else
  dotsay "+ @yellow[[work]] is already in your @yellow[[\$PATH]], skipping adding"
  echo
fi

# Run setup
dotsay "+ Running first-time setup"
"$HOME"/.work-cli/bin/work setup
echo
echo "---------------"
echo

# Run setup script
dotsay "@yellow[[work]] is installed! @yellow[[Reload]] your shell, and run @yellow[[work]] for help"
